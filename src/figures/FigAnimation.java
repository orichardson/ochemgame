
package figures;

import java.util.ArrayList;

public class FigAnimation {
	String name;

	int interpolationMode;
	// 0 -->

	double currentIndex;
	private FigPose currentPose;

	public ArrayList<FigPose> poses = new ArrayList<FigPose>();
	ArrayList<Double> times = new ArrayList<Double>();

	public FigPose getPose() {
		return currentPose;
	}

	public void update(double time) {
		while (time > 0) {
			double max = times.get((int) currentIndex);
			double dt = Math.min(max, time);
			currentIndex += dt / max;
			time -= dt;
		}
		int a = (int) currentIndex, s = poses.size();

		switch (interpolationMode) {
		case 0:
			currentPose = FigPose.linearMeld(poses.get(a), poses.get( (a + 1) % s), currentIndex
					- a);
			break;
		case 1:
			double time_before = times.get( (a - 1 + s) % s),
			time_after = times.get( (a + 1) % s);

			currentPose = FigPose.cubicMeld(poses.get(a), poses.get( (a + 1) % s),
					poses.get( (a - 1 + s) % s), poses.get( (a + 2) % s), time_before, time_after,
					currentIndex - a);
			break;
		default:
			currentPose = poses.get(a);
		}
	}

	public String pack() {
		StringBuilder strb = new StringBuilder();

		strb.append("Autogenerated Animation file. Comments are default; coding regions are lines of the form PARAM[VAL]\t| VALUE\n\n");
		strb.append("NAME\t|" + name + "\n");
		strb.append("MODE\t|" + interpolationMode + "\n\n");

		for (int i = 0; i < poses.size(); i++) {
			strb.append("POSE[" + times.get(i) + "]\t| " + poses.get(i).pack());
		}

		return strb.toString();
	}

	public static FigAnimation unpack(String str) {
		String[] lines = str.split("\n");

		FigAnimation anim = new FigAnimation();

		for (int i = 0; i < lines.length; i++) {
			if (!lines[i].contains("|"))
				continue;

			String data = lines[i].substring(lines[i].indexOf("|") + 1).trim();

			if (lines[i].startsWith("NAME"))
				anim.name = data;

			else if (lines[i].startsWith("MODE"))
				anim.interpolationMode = Integer.parseInt(data);

			else if (lines[i].startsWith("POSE")) {
				double t = 1;
				if (lines[i].contains("["))
					t = Double.parseDouble(lines[i].substring(data.indexOf("[") + 1,
							lines[i].indexOf("]")));

				FigPose p = FigPose.unpack(data);
				anim.poses.add(p);
				anim.times.add(t);
			}
		}

		return anim;
	}
}
